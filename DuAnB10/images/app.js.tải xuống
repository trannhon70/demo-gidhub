(function () {
  angular.module('TIX', ['ui.router', 'ngCookies', 'ngRateIt', 'ngTouchstart', 'updateMeta', 'ngMeta'])
    .config(function ($stateProvider, $urlRouterProvider, $locationProvider, $httpProvider) {

      $locationProvider.html5Mode(true);
      $locationProvider.hashPrefix(''); // by default '!' for angular 1.6+

      $stateProvider
        .state('main', {
          views: {
            'header': {
              url: "/header",
              templateUrl: "app/header/header.html",
              controller: "HeaderController"
            },
            'content': {
              template: '<div ui-view></div>'
            },
            'footer': {
              url: "/footer",
              templateUrl: "app/footer/footer.html",
              controller: "FooterController"
            }
          }
        })

        .state('main.home', {
          url: "/?scr",
          templateUrl: 'app/main/main.html',
          controller: "MainController",
        })

        // // temporary
        // .state('main.banlafancungmarvel', {
        //   url: "/ban-la-fan-cung-marvel",
        //   templateUrl: "app/main/main.html",
        //   controller: "EndGameController",
        // })

        // FAQ =============================> START
        .state('main.faq', {
          url: "/faq",
          templateUrl: "app/footer/faq.html",
          controller: "TermController",
        })
        .state('main.faqv2', {
          url: "/faq/",
          templateUrl: "app/footer/faq.html",
          controller: "TermController",
        })
        .state('faqMobile', {
          views: {
            'header': '',
            'content': {
              template: '<div ui-view></div>'
            },
            'footer': ''
          }
        })
        .state('faqMobile.faq', {
          url: "/webview/faq.html",
          templateUrl: "app/footer/faq.mobile.html",
        })
        .state('faqMobile.policy', {
          url: "/webview/policy.html",
          templateUrl: "app/footer/policy.mobile.html"
        })
        .state('faqMobile.term', {
          url: "/webview/term.html",
          templateUrl: "app/footer/term.mobile.html"
        })
        .state('faqMobile.regular', {
          url: "/webview/regular.html",
          templateUrl: "app/footer/term.mobile.html"
        })

        .state('main.term', {
          url: "/thoa-thuan-su-dung",
          templateUrl: "app/footer/term.html",
          controller: "TermController",
        })
        // .state('main.regular', {
        //   url: "/quy-che-hoat-dong",
        //   templateUrl: "app/footer/regular.html",
        //   controller: "TermController",
        // })
        .state('main.policy', {
          url: "/chinh-sach-bao-mat",
          templateUrl: "app/footer/policy.html",
          controller: "TermController",
        })

        .state('main.termv2', {
          url: "/thoa-thuan-su-dung/",
          templateUrl: "app/footer/term.html",
          controller: "TermController",
        })
        // .state('main.regularv2', {
        //   url: "/quy-che-hoat-dong/",
        //   templateUrl: "app/footer/regular.html",
        //   controller: "TermController",
        // })
        .state('main.policyv2', {
          url: "/chinh-sach-bao-mat/",
          templateUrl: "app/footer/policy.html",
          controller: "TermController",
        })

        .state('guildline', {
          views: {
            'header': {
              url: "/header",
              templateUrl: "app/header/header.html",
              controller: "HeaderController"
            },
            'content': {
              template: '<div ui-view></div>'
            },
            'footer': ''
          }
        })

        .state('guildline.guidev1', {
          url: "/brand-guideline",
          templateUrl: "app/footer/guideline.html",
        })

        .state('guildline.guidev2', {
          url: "/brand-guideline/",
          templateUrl: "app/footer/guideline.html",
        })

        .state('main.webview', {
          url: '/webview/payment?status',
          templateUrl: 'app/webview/payment.html',
          controller: 'WebviewController',
        })

        .state('main.webviewZalopay', {
          url: '/webview/zalopaygw?status',
          templateUrl: 'app/webview/payment.html',
          controller: 'WebviewController',
        })

        // .state('main.guidev1', {
        //   url: "/quyen-loi-thanh-vien",
        //   templateUrl: "app/footer/member.html",
        // })

        // .state('main.guidev2', {
        //   url: "/quyen-loi-thanh-vien/",
        //   templateUrl: "app/footer/member.html",
        // })

        // FAQ  =============================> END

      /*
        // SEO =============================> START
        .state('main.filmv1', {
          url: '/phim',
          templateUrl: 'app/seo/film/film.html',
          controller: 'FilmController',
        })

        .state('main.filmv2', {
          url: '/phim/',
          templateUrl: 'app/seo/film/film.html',
          controller: 'FilmController',
        })

        .state('main.filmUpComingv1', {
          url: '/phim/sap-chieu',
          templateUrl: 'app/seo/film/filmUpComing/filmUpComing.html',
          controller: 'FilmUpComingController',
        })

        .state('main.filmUpComingv2', {
          url: '/phim/sap-chieu/',
          templateUrl: 'app/seo/film/filmUpComing/filmUpComing.html',
          controller: 'FilmUpComingController',
        })

        .state('main.filmRecommendv1', {
          url: '/phim/recommend',
          templateUrl: 'app/seo/film/filmRecommend/filmRecommend.html',
          controller: 'FilmRecommendController',
        })

        .state('main.filmRecommendv2', {
          url: '/phim/phim-viet/',
          templateUrl: 'app/seo/film/filmViet/filmViet.html',
          controller: 'FilmVietController',
        })

        .state('main.filmVietv1', {
          url: '/phim/phim-viet',
          templateUrl: 'app/seo/film/filmViet/filmViet.html',
          controller: 'FilmVietController',
        })

        .state('main.filmVietv2', {
          url: '/phim/recommend/',
          templateUrl: 'app/seo/film/filmRecommend/filmRecommend.html',
          controller: 'FilmVietController',
        })

        .state('main.filmActionv1', {
          url: '/phim/the-loai/hanh-dong',
          templateUrl: 'app/seo/film/genre/filmAction/filmAction.html',
          controller: 'FilmActionController',
        })

        .state('main.filmActionv2', {
          url: '/phim/the-loai/hanh-dong/',
          templateUrl: 'app/seo/film/genre/filmAction/filmAction.html',
          controller: 'FilmActionController',
        })

        .state('main.filmAnimationv1', {
          url: '/phim/the-loai/hoat-hinh',
          templateUrl: 'app/seo/film/genre/filmAnimation/filmAnimation.html',
          controller: 'FilmAnimationController',
        })

        .state('main.filmAnimationv2', {
          url: '/phim/the-loai/hoat-hinh/',
          templateUrl: 'app/seo/film/genre/filmAnimation/filmAnimation.html',
          controller: 'FilmAnimationController',
        })

        .state('main.filmComedyv1', {
          url: '/phim/the-loai/hai',
          templateUrl: 'app/seo/film/genre/filmComedy/filmComedy.html',
          controller: 'FilmComedyController',
        })

        .state('main.filmComedyv2', {
          url: '/phim/the-loai/hai/',
          templateUrl: 'app/seo/film/genre/filmComedy/filmComedy.html',
          controller: 'FilmComedyController',
        })

        .state('main.filmHorrorv1', {
          url: '/phim/the-loai/phim-ma-kinh-di',
          templateUrl: 'app/seo/film/genre/filmHorror/filmHorror.html',
          controller: 'FilmHorrorController',
        })

        .state('main.filmHorrorv2', {
          url: '/phim/the-loai/phim-ma-kinh-di/',
          templateUrl: 'app/seo/film/genre/filmHorror/filmHorror.html',
          controller: 'FilmHorrorController',
        })

        .state('main.promotionv1', {
          url: '/khuyen-mai',
          templateUrl: 'app/seo/promotion/promotion.html',
          controller: 'PromotionController',
        })

        .state('main.promotionv2', {
          url: '/khuyen-mai/',
          templateUrl: 'app/seo/promotion/promotion.html',
          controller: 'PromotionController',
        })

        .state('main.promotionLottev1', {
          url: '/khuyen-mai/1-lotte-cinema',
          templateUrl: 'app/seo/promotion/Lotte/promotionlotte.html',
          controller: 'PromotionLotteController',
        })

        .state('main.promotionLottev2', {
          url: '/khuyen-mai/1-lotte-cinema/',
          templateUrl: 'app/seo/promotion/Lotte/promotionlotte.html',
          controller: 'PromotionLotteController',
        })

        .state('main.promotionBHDv1', {
          url: '/khuyen-mai/4-bhd-star-cineplex',
          templateUrl: 'app/seo/promotion/BHD/promotionbhd.html',
          controller: 'PromotionBHDController',
        })

        .state('main.promotionBHDv2', {
          url: '/khuyen-mai/4-bhd-star-cineplex/',
          templateUrl: 'app/seo/promotion/BHD/promotionbhd.html',
          controller: 'PromotionBHDController',
        })

        .state('main.promotionGalaxyv1', {
          url: '/khuyen-mai/2-galaxy-cinema',
          templateUrl: 'app/seo/promotion/Galaxy/promotiongalaxy.html',
          controller: 'PromotionGalaxyController',
        })

        .state('main.promotionGalaxyv2', {
          url: '/khuyen-mai/2-galaxy-cinema/',
          templateUrl: 'app/seo/promotion/Galaxy/promotiongalaxy.html',
          controller: 'PromotionGalaxyController',
        })

        .state('main.promotionOtherv1', {
          url: '/khuyen-mai/cum-rap-khac',
          templateUrl: 'app/seo/promotion/Other/promotionother.html',
          controller: 'PromotionOtherController',
        })

        .state('main.promotionOtherv2', {
          url: '/khuyen-mai/cum-rap-khac/',
          templateUrl: 'app/seo/promotion/Other/promotionother.html',
          controller: 'PromotionOtherController',
        })

        .state('main.reviewv1', {
          url: '/review',
          templateUrl: 'app/seo/review/review.html',
          controller: 'ReviewController',
        })

        .state('main.reviewv2', {
          url: '/review/',
          templateUrl: 'app/seo/review/review.html',
          controller: 'ReviewController',
        })

        .state('main.reviewtixv1', {
          url: '/review/tix',
          templateUrl: 'app/seo/review/tix/reviewtix.html',
          controller: 'ReviewTIXController',
        })

        .state('main.reviewtixv2', {
          url: '/review/tix/',
          templateUrl: 'app/seo/review/tix/reviewtix.html',
          controller: 'ReviewTIXController',
        })

        .state('main.reviewpublicv1', {
          url: '/review/cong-dong',
          templateUrl: 'app/seo/review/public/reviewpublic.html',
          controller: 'ReviewPublicController',
        })

        .state('main.reviewpublicv2', {
          url: '/review/cong-dong/',
          templateUrl: 'app/seo/review/public/reviewpublic.html',
          controller: 'ReviewPublicController',
        })

        .state('main.newsv1', {
          url: '/goc-dien-anh/tin-dien-anh',
          templateUrl: 'app/seo/news/news.html',
          controller: 'NewsController',
        })

        .state('main.newsv2', {
          url: '/goc-dien-anh/tin-dien-anh/',
          templateUrl: 'app/seo/news/news.html',
          controller: 'NewsController',
        })

        .state('main.cinemav1', {
          url: '/rap-chieu-phim',
          templateUrl: 'app/seo/cinema/cinema.html',
          controller: 'CinemaController',
        })

        .state('main.cinemav2', {
          url: '/rap-chieu-phim/',
          templateUrl: 'app/seo/cinema/cinema.html',
          controller: 'CinemaController',
        })

        .state('main.sessionv1', {
          url: '/lich-chieu',
          templateUrl: 'app/seo/session/session.html',
          controller: 'SessionController',
        })

        .state('main.sessionv2', {
          url: '/lich-chieu/',
          templateUrl: 'app/seo/session/session.html',
          controller: 'SessionController',
        })
        // SEO =============================> END
      */

        // Detail =============================> START
        .state('main.detail', {
          url: "/phim/{slug}?tab",
          templateUrl: "app/movie-detail/movie-detail.html",
          controller: "MovieDetailController",
        })

        .state('main.detailNews', {
          url: "/goc-dien-anh/{slug}?tab",
          templateUrl: "app/news-detail/news-detail.html",
          controller: "NewsDetailController",
        })

        .state('main.detailPromotions', {
          url: "/khuyen-mai/{slug}?tab",
          templateUrl: "app/news-detail/news-detail.html",
          controller: "NewsDetailController",
        })

        .state('main.detailReviews', {
          url: "/review/{slug}?tab",
          templateUrl: "app/news-detail/news-detail.html",
          controller: "NewsDetailController",
        })

        .state('main.detailCinema', {
          url: "/rap-chieu-phim/{slug}",
          templateUrl: "app/cinema-detail/cinema-detail.html",
          controller: "CinemaDetailController",
        })

        .state('main.cinemaMobile', {
          url: '/rap-chieu-phim-mobile/',
          templateUrl: 'app/cinema-detail/cinema-detail-mobile.html',
          controller: 'CinemaMobileController',
        })
        // Detail =============================> END

        // SDK ==================================
        .state('sdk', {
          views: {
            'header': '',
            'content': {
              template: '<div ui-view></div>'
            },
            'footer': ''
          }
        })

        .state('sdk.index', {
          url: '/sdk',
          templateUrl: 'app/sdk/sdk.html',
          controller: 'SDKController',
        })

        .state('sdk.app', {
          url: '/sdk/app',
          templateUrl: 'app/sdk/app.html',
          controller: 'SDKController',
        })
        //=======================================

        // Down APP==============================
        .state('app', {
          views: {
            'header': '',
            'content': {
              template: '<div ui-view></div>'
            },
            'footer': ''
          }
        })

        .state('app.index1', {
          url: '/app/download',
          templateUrl: 'app/app-down/app-down.html',
          controller: 'AppController',
        })

        .state('app.index2', {
          url: '/app/download/',
          templateUrl: 'app/app-down/app-down.html',
          controller: 'AppController',
        })
        //=======================================

        // Login ================================
        .state('login', {
          views: {
            'header': '',
            'content': {
              template: '<div ui-view></div>'
            },
            'footer': ''
          }
        })

        .state('login.index1', {
          url: '/login',
          templateUrl: '/app/login/index.html',
          controller: 'LoginIndexController',
        })

        .state('login.index2', {
          url: '/login/',
          templateUrl: '/app/login/index.html',
          controller: 'LoginIndexController',
        })
        //=======================================

        // // Deactive =============================
        // .state('main.deactive1', {
        //   url: '/deactive',
        //   templateUrl: '/app/deactive/deactive.html',
        //   controller: 'DeactiveController',
        // })

        // .state('main.deactive2', {
        //   url: '/deactive/',
        //   templateUrl: '/app/deactive/deactive.html',
        //   controller: 'DeactiveController',
        // })
        // //=======================================

        .state('checkout', {
          views: {
            'header': '',
            'content': {
              template: '<div ui-view></div>'
            },
            'footer': ''
          }
        })

        .state('checkout.resultappid2', {
          url: "/checkout/result2?appid&apptransid&status",
          templateUrl: "app/checkout/checkout.html",
          controller: "CheckoutSuccessController",
        })

        .state('checkout.index', {
          url: "/checkout/{sessionId}",
          templateUrl: "app/checkout/checkout.html",
          controller: "CheckoutController",
        })

        .state('checkout.bhd1', {
          url: "/checkout/?merchantCode&cinemaCode&sessionCode&usersessionid&userid",
          templateUrl: "app/checkout/bhd/checkoutbhd.html",
          controller: "CheckoutBHDController",
        })

        .state('checkout.bhd2', {
          url: "/checkout?merchantCode&cinemaCode&sessionCode&usersessionid&userid",
          templateUrl: "app/checkout/bhd/checkoutbhd.html",
          controller: "CheckoutBHDController",
        })


        .state('checkout.resultInvoiceNo', {
          url: "/checkout/result/?invoice_no",
          templateUrl: "app/checkout/checkout.html",
          controller: "CheckoutSuccessController",
        })

        .state('checkout.resulttransactionID', {
          url: "/checkout/result/?transactionID",
          templateUrl: "app/checkout/checkout.html",
          controller: "CheckoutSuccessController",
        })

        .state('checkout.resultappid', {
          url: "/checkout/result/?appid&zptransid&apptransid&status",
          templateUrl: "app/checkout/checkout.html",
          controller: "CheckoutSuccessController",
        })

        .state('checkout.invalid', {
          url: "/checkout/invalid",
          templateUrl: "app/checkout/bhd/checkout-invalid.html",
          controller: "CheckoutBHDController",
        })
        //===========================================

        .state('promotion', {
          views: {
            'header': '',
            'content': {
              template: '<div ui-view></div>'
            },
            'footer': ''
          }
        })

        // .state('promotion.tet', {
        //   url: "/campaign-tet",
        //   templateUrl: "app/campaign-tet/campaign-tet.html",
        //   controller: "CampaignTetController",
        // })

        // .state('promotion.tetinfo', {
        //   url: "/campaign-tet/info?t&i&c",
        //   templateUrl: "app/campaign-tet/campaign-tet-info.html",
        //   controller: "CampaignTetInfoController",
        // })

        // .state('promotion.t7', {
        //   url: "/campaign-t7",
        //   templateUrl: "app/campaign/t7_2018/campaign.html",
        //   controller: "CampaignT7Controller",
        // })

        // .state('promotion.123fpayment', {
        //   url: "/123fpayment?code",
        //   templateUrl: "app/campaign/123fpayment/123fpayment.html",
        //   controller: "PaymentController",
        // })

      $urlRouterProvider.otherwise('/');

      $httpProvider.useApplyAsync(1000); //true
    })
    .directive('actualImage', ['$timeout', function ($timeout) {
      return {
        link: function ($scope, element, attrs) {
          function waitForImage(url) {
            var tempImg = new Image();
            tempImg.onload = function () {
              $timeout(function () {
                element.attr('src', url);
              });
            };
            tempImg.src = url;
          }

          attrs.$observe('actualImage', function (newValue) {
            if (newValue) {
              waitForImage(newValue);
            }
          });
        }
      }
    }])
    .filter('rangeFrom', function () {
      return function (arrayRequest, from) {
        var response = [];
        for (var i = from; i < arrayRequest.length; i++) {
          response.push(arrayRequest[i]);
        }

        return response;
      }
    })
    .filter('toArray', function () {
      return function (obj) {
        if (!(obj instanceof Object)) return obj;
        return _.map(obj, function (val, key) {
          return Object.defineProperty(val, '$key', {
            __proto__: null,
            value: key
          });
        });
      }
    })
    .service('APIService', function () {
      var api = '/apitomapp';
      var userInfo = {};
      return {
        get: function ($http, param, success, error) {
          var data = {
            param: param,
            method: 'GET'
          };
          if (Object.keys(userInfo).length === 2 && typeof (userInfo['X-123F-USERTOKEN']) !== 'undefined' && typeof (userInfo['X-123F-USERID']) !== 'undefined') {
            data.header_config = {
              'X-123F-USERTOKEN': userInfo['X-123F-USERTOKEN'],
              'X-123F-USERID': userInfo['X-123F-USERID']
            };
          }
          return $http.post(api, data)
            .then(function successCallback(response) {
              success(response);
            }, function errorCallback(response) {
              error(response);
            })
        },
        post: function ($http, param, data, success, error) {
          var data = {
            param: param,
            data: data,
            method: 'POST',
          };
          if (Object.keys(userInfo).length === 2 && typeof (userInfo['X-123F-USERTOKEN']) !== 'undefined' && typeof (userInfo['X-123F-USERID']) !== 'undefined') {
            data.header_config = {
              'X-123F-USERTOKEN': userInfo['X-123F-USERTOKEN'],
              'X-123F-USERID': userInfo['X-123F-USERID']
            };
          }
          return $http.post(api, data)
            .then(function successCallback(response) {
              success(response);
            }, function errorCallback(response) {
              error(response);
            })
        },
        setUser: function (user_token, user_id) {
          userInfo['X-123F-USERTOKEN'] = user_token;
          userInfo['X-123F-USERID'] = user_id;
        },
        removeUser: function () {
          userInfo = {};
        },
        clearCache: function ($http, keyCache, success, error) {
          var data = {
            keyCache: keyCache
          }
          return $http.post('/clearcache', data)
            .then(function successCallback(response) {
              success(response);
            }, function errorCallback(response) {
              error(response);
            })
        }
      }
    })
    .service('Upload', function () {
      return {
        post: function ($http, data, success, error) {
          return $http.post('/apiupload', data)
            .then(function successCallback(response) {
              success(response);
            }, function errorCallback(response) {
              error(response);
            });
        }
      }
    })
    .service('APIServiceV2', function () {
      var api = '/apitomapp-v2';
      var userInfo = {};
      return {
        get: function ($http, param, success, error) {
          var data = {
            param: param,
            method: 'GET'
          };
          if (Object.keys(userInfo).length === 2 && typeof (userInfo['X-123F-USERTOKEN']) !== 'undefined' && typeof (userInfo['X-123F-USERID']) !== 'undefined') {
            data.header_config = {
              'X-123F-USERTOKEN': userInfo['X-123F-USERTOKEN'],
              'X-123F-USERID': userInfo['X-123F-USERID'],
              'Authorization': "Basic " + btoa("" + userInfo['X-123F-USERID'] + ":" + userInfo['X-123F-USERTOKEN'])
            };
          }
          return $http.post(api, data)
            .then(function successCallback(response) {
              success(response);
            }, function errorCallback(response) {
              error(response);
            })
        },
        delete: function ($http, param, success, error) {
          var data = {
            param: param,
            method: 'DELETE'
          };
          if (Object.keys(userInfo).length === 2 && typeof (userInfo['X-123F-USERTOKEN']) !== 'undefined' && typeof (userInfo['X-123F-USERID']) !== 'undefined') {
            data.header_config = {
              'X-123F-USERTOKEN': userInfo['X-123F-USERTOKEN'],
              'X-123F-USERID': userInfo['X-123F-USERID'],
              'Authorization': "Basic " + btoa("" + userInfo['X-123F-USERID'] + ":" + userInfo['X-123F-USERTOKEN'])
            };
          }
          return $http.post(api, data)
            .then(function successCallback(response) {
              success(response);
            }, function errorCallback(response) {
              error(response);
            })
        },
        post: function ($http, param, data, success, error) {
          var data = {
            param: param,
            data: data,
            method: 'POST',
          };
          if (Object.keys(userInfo).length === 2 && typeof (userInfo['X-123F-USERTOKEN']) !== 'undefined' && typeof (userInfo['X-123F-USERID']) !== 'undefined') {
            data.header_config = {
              'X-123F-USERTOKEN': userInfo['X-123F-USERTOKEN'],
              'X-123F-USERID': userInfo['X-123F-USERID'],
              'Authorization': "Basic " + btoa("" + userInfo['X-123F-USERID'] + ":" + userInfo['X-123F-USERTOKEN'])
            };
          }
          return $http.post(api, data)
            .then(function successCallback(response) {
              success(response);
            }, function errorCallback(response) {
              error(response);
            })
        },
        setUser: function (user_token, user_id) {
          userInfo['X-123F-USERTOKEN'] = user_token;
          userInfo['X-123F-USERID'] = user_id;
        },
        removeUser: function () {
          userInfo = {};
        },
        clearCache: function ($http, keyCache, success, error) {
          var data = {
            keyCache: keyCache
          }
          return $http.post('/clearcache', data)
            .then(function successCallback(response) {
              success(response);
            }, function errorCallback(response) {
              error(response);
            })
        }
      }
    })
    .service('ParseUrl', function () {
      return {
        byId: function (slug) {
          // var element = slug.split('-');
          // var result = element.pop();
          // var check  = parseInt(result);
          // if (isNaN(result) || (!isNaN(result) && result.length > check.toString().length)) {
          //   result = '';
          // }
          // return result;
          var element = slug.split('-');
          var result = isNaN(element[0]) ? element.pop() : element.shift();
          return result;
        },
        byQueryString: function (sParam) {
          var sPageURL = decodeURIComponent(window.location.search.substring(1)),
            sURLVariables = sPageURL.split('&'),
            sParameterName, i;
          for (i = 0; i < sURLVariables.length; i++) {
            sParameterName = sURLVariables[i].split('=');
            if (sParameterName[0] === sParam) {
              return sParameterName[1] === undefined ? true : sParameterName[1];
            }
          }
        }
      }
    })
    .service('CommonService', function () {
      return {
        calTotal: function ($rootScope) {
          $rootScope.totalPrice = 0;
          for (var i = 0; i < $rootScope.ticketTypes.length; i++) {
            if ($rootScope.ticketTypes[i].type_num > 0) {
              $rootScope.totalPrice += $rootScope.ticketTypes[i].type_num * $rootScope.ticketTypes[i].type_price;
            }
          }
        }
      }
    })
    // .factory('beforeUnload', function ($rootScope, $window) {
    //   // Events are broadcast outside the Scope Lifecycle

    //   $window.onbeforeunload = function (e) {
    //       var confirmation = {};
    //       var event = $rootScope.$broadcast('onBeforeUnload', confirmation);
    //       if (event.defaultPrevented) {
    //           return confirmation.message;
    //       }
    //   };

    //   $window.onunload = function () {
    //       $rootScope.$broadcast('onUnload');
    //   };
    //   return {};
    // })
    .run(function ($http, $state, $rootScope, $cookies, $window, $anchorScroll, APIService, APIServiceV2, CommonService, $http, $templateCache, $sce, ngMeta) { //beforeUnload

      var cookieTmp;
      var expireTmp;
      var localStorageTmp = localStorage.getItem('isRemoveEmatic');
      var lockLike=false, likeCall=false;

      if (angular.isDefined(localStorageTmp) && localStorageTmp !== null) {
        localStorage.removeItem('isRemoveEmatic');
      }

      delete_cookie('_v1EmaticSolutions');
      delete_cookie('_v1EmaticSolutionsBye');
      delete_cookie('_v1EmaticSolutionsEI');

      window.onbeforeunload = function () {
        window.scrollTo(0, 0);
      }

      $rootScope.isMobile = false; //initiate as false
      $rootScope.newLogin = true;
      // device detection
      if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) ||
        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0, 4)) ||
        $(window).width() < 768) {
        $rootScope.isMobile = true;
      }

      $rootScope.$on("$locationChangeSuccess", function (event, toState, toParams, fromState, fromParams) {
        $anchorScroll();
        sendGAPageView();
      });

      if (/facebook/.test(document.referrer)) {
        $rootScope.isRedirectFromFB = true;
      } else {
        $rootScope.isRedirectFromFB = false;
      }

      // $rootScope.$on('$stateChangeSuccess', function (event) {
      //   sendGAPageView();
      // });

      function sendGAPageView(urlTo) {
        if (!$window.ga)
          return;
        $window.ga('send', 'pageview', {
          page: urlTo
        });
      }

      // Change cookies to localStorage
      if (typeof $cookies.get('locationId') !== 'undefined') {
        cookieTmp = $cookies.get('locationId');
        $cookies.remove('locationId');
        localStorage.setItem('locationId', cookieTmp);
      }

      if (localStorage.getItem('locationId') !== null && localStorage.getItem('locationId') !== undefined) {
        $rootScope.locationId = Number(localStorage.getItem('locationId'));
      } else {
        $rootScope.locationId = 1;
      }

      $rootScope.language = $cookies.get('language') || 'vi';

      $rootScope.user = {};
      $rootScope.isLoggedIn = false;

      if (typeof $cookies.getObject('methodpay') !== 'undefined') {
        cookieTmp = $cookies.getObject('methodpay');
        $cookies.remove('methodpay');
        localStorage.setItem('methodpay', JSON.stringify(cookieTmp));
      }

      if (typeof $cookies.get("favorite-cinema") !== 'undefined') {
        cookieTmp = $cookies.get('favorite-cinema');
        $cookies.remove('favorite-cinema');
        localStorage.setItem('favorite-cinema', cookieTmp);
      }

      if (typeof $cookies.get("email") !== 'undefined') {
        cookieTmp = $cookies.get('email');
        $cookies.remove('email');
        localStorage.setItem('email', cookieTmp);
      }

      if (typeof $cookies.get("phone") !== 'undefined') {
        cookieTmp = $cookies.get('phone');
        $cookies.remove('phone');
        localStorage.setItem('phone', cookieTmp);
      }

      if (typeof $cookies.getObject('user') !== 'undefined') {
        cookieTmp = $cookies.getObject('user');
        $cookies.remove('user');
        localStorage.setItem('user', JSON.stringify(cookieTmp));
      }

      if (typeof $cookies.getObject('bhdMember') !== 'undefined') {
        cookieTmp = $cookies.getObject('bhdMember');
        expireTmp = {
          result: cookieTmp,
          expire: Math.floor(Date.now() / 1000) // current timestamp in seconds
        }
        $cookies.remove('bhdMember');
        localStorage.setItem('bhdMember', JSON.stringify(expireTmp));
      }
      if (angular.isDefined(localStorage.getItem('bhdMember')) && localStorage.getItem('bhdMember') !== null) {
        var bhdMemberStorage = localStorage.getItem('bhdMember');
        var bhdMemberInfo = JSON.parse(bhdMemberStorage);
        if (Math.floor(Date.now() / 1000) > (bhdMemberInfo.expire + 900)) {
          localStorage.removeItem('bhdMember');
        }
      }

      if (typeof $cookies.get('userSessionBHD') !== 'undefined') {
        cookieTmp = $cookies.get('userSessionBHD');
        expireTmp = {
          result: cookieTmp,
          expire: Math.floor(Date.now() / 1000) // current timestamp in seconds
        }
        $cookies.remove('userSessionBHD');
        localStorage.setItem('userSessionBHD', JSON.stringify(expireTmp));
      }
      if (angular.isDefined(localStorage.getItem('userSessionBHD')) && localStorage.getItem('userSessionBHD') !== null) {
        var userSessionBHDStorage = localStorage.getItem('userSessionBHD');
        var userSessionBHDInfo = JSON.parse(userSessionBHDStorage);
        if (Math.floor(Date.now() / 1000) > (userSessionBHDInfo.expire + 900)) {
          localStorage.removeItem('userSessionBHD');
        }
      }

      var currentUser = localStorage.getItem('user');
      if (angular.isDefined(currentUser)) {
        $rootScope.user = JSON.parse(currentUser);
        if ($rootScope.user !== null && !_.isEmpty($rootScope.user)) {
          $rootScope.isLoggedIn = true;
          APIService.setUser($rootScope.user.user_token, $rootScope.user.user_id);
          APIServiceV2.setUser($rootScope.user.user_token, $rootScope.user.user_id);
        } else {
          $rootScope.isLoggedIn = false;
          $rootScope.user = {};
        }
      }

      $rootScope.e = function (word) {
        return Dictionary.get($rootScope.language, word);
      }

      // ===== GLOBAL FUNCTION =====
      $rootScope.timeAgo = function (time) {
        var result = jQuery.timeago(time);
        if (result == 'Vừa xong trước') {
          result = result.replace(' trước', '');
        }
        return result;
      }

      $rootScope.config = Config;

      $rootScope.likeAction = function (event, object, keyCache) {
        if (!$rootScope.isLoggedIn) {
          $rootScope.isHideUserNotSignIn = false;
          // $rootScope.FBLogin(false);
          // var login = setInterval(function () {
          //   if ($rootScope.isLoggedIn) {
          //     postLike(event, object, keyCache);
          //     clearInterval(login);
          //   }
          // }, 500);
        } else {
          if(likeCall) {
            clearTimeout(likeCall);
          }
          likeCall=setTimeout(function() {
            if(lockLike==false) {
              postLike(event, object, keyCache);
            }
          }, 100);
        }
      }

      /** Pass Version to checkout */
      $rootScope.passVersion = function (keyVersion, sessionId) {
        var check = keyVersion.indexOf('_'),
          checkDate = moment().format('YYYYMMDD');
        var versPart = [];
        var type = '',
          digital = '';
        var versionStore = localStorage.getItem('sessionVersion');
        var vers = JSON.parse(versionStore);
        // console.log(vers);
        if (vers === undefined || vers === null || vers.date < checkDate) {
          vers = new Object();
          vers.total = 0;
          vers.date = moment().format('YYYYMMDD');
        }
        if (check == -1) {
          versPart = keyVersion.split('-');
        } else {
          versPart = keyVersion.split('_');
        }
        check = parseInt(versPart[0]);
        digital = (versPart[1] == 0) ? 'Digital' : 'L.Tiếng';
        switch (check) {
          case 1:
            type = 'IMAX';
            break;
          case 2:
            type = '2D';
            break;
          case 3:
            type = '3D';
            break;
          case 4:
            type = '4D';
            break;
          case 5:
            type = 'GOLDCLASS';
            break;
          default:
            type = 'High';
            break;
        }
        if (!vers[sessionId]) {
          vers[sessionId] = type + '\/' + digital;
          vers.total++;
        }
        versionStore = JSON.stringify(vers);
        // console.log(versionStore);
        localStorage.setItem('sessionVersion', versionStore);
      }

      $rootScope.cancelOrderOnUnload = function (userSessionId, pCinemaId) {
        if (angular.isDefined(userSessionId) &&
          !_.isNull(userSessionId) &&
          !_.isEmpty(userSessionId) &&
          angular.isDefined(pCinemaId) &&
          !_.isNull(pCinemaId) &&
          !_.isEmpty(pCinemaId)) {
          console.log('Cancel Order');
          var data = {};
          data['user_session_id'] = userSessionId;
          data['p_cinema_id'] = pCinemaId;
          APIService.post($http, {
            url: '/checkout/cancelticketing',
            keyCache: 'no-cache'
          }, data, function (response) {
            console.log('Cancel Order Success');
          }, function (errorResponse) {
            console.log('Cancel Order Error');
          });
        }
      }

      $rootScope.cancelOrderOnUnloadV2 = function(sessionId, userSessionId) {
        if (angular.isDefined(userSessionId) &&
          !_.isNull(userSessionId) &&
          !_.isEmpty(userSessionId) &&
          angular.isDefined(sessionId) &&
          !_.isNull(sessionId) &&
          !_.isEmpty(sessionId)) {
          console.log('Cancel Order v2');
          APIServiceV2.delete($http, {
            url: '/api/booking/vista/tickettype?sessionId=' + sessionId + '&userSessionId=' + userSessionId,
            keyCache: 'no-cache'
          }, function (response) {
            if (response.data.code == 0)
              console.log('Cancel Order Success');
            else
              console.log('Cancel Order Fail:' + response.data.msg);
          }, function (errorResponse) {
            console.log('Cancel Order Error');
          });
        }
      }

      function postLike(event, object, keyCacheTmp) {
        var it = event.currentTarget === null ? event.target : event.currentTarget;
        var data = it.dataset;
        var canLike = parseInt(object.user_like) === 0;
        var params = {
          object_id: data.id,
          object_type: data.type,
          vote: (canLike) ? 1 : 0
        };

        lockLike=true;
        APIService.post($http, {
          url: '/comment/vote',
          keyCache: 'no-cache'
        }, params, function (response) {
          lockLike=false;
          if (!response.data.hasOwnProperty('error')) {
            if (response.data.result === true) {
              if (canLike) {
                object.up_vote += 1;
                object.user_like = 1;
              } else {
                object.up_vote -= 1;
                object.user_like = 0;
                object.up_vote = Math.max(0, object.up_vote)
              }

              //Clear Cache
              if (angular.isDefined(keyCacheTmp) && keyCacheTmp !== 'no-cache') {
                var data = {
                  keyCache: keyCacheTmp
                }
                var result = [];
                result[0] = $http.post('/clearcache', data);
                // var key = 'like_' + $rootScope.user.user_id + '_' + params.object_type;
                // if (angular.isDefined(key)) {
                //   result[1] = $http.post('/clearcache', {keyCache: key});
                // }
                return result;
              }
            }
          } else if (response.data.error.code === 45 || response.data.error.code === -1) {
            // user_token expired
            $rootScope.isHideUserTokenExpired = false;
          }
        });
      }

      $rootScope.setStar = function (avgPoint) {
        var html = '';
        var a = Math.floor(avgPoint / 2);
        for (var i = 1; i <= a; i++) {
          html += '<img class="smallStar" src="app/assets/img/icons/star1.png">';
        }
        if (avgPoint % 2 > 0) {
          html += '<img class="half" src="app/assets/img/icons/star1.2.png">';
        }
        return $sce.trustAsHtml(html);
      }

      $rootScope.sendGA = function (category, action, label) {
        ga('send', 'event', {
          eventCategory: category,
          eventAction: action,
          eventLabel: label
        });
      }

      $rootScope.goToLogin = function () {
        $rootScope.redirectUrlLogin = $state.current.name;
        $rootScope.redirectParams = {};
        for(var i in $state.params) {
          $rootScope.redirectParams[i] = $state.params[i];
        }
        $cookies.put('redirectParams', btoa(JSON.stringify($rootScope.redirectParams)));
        $state.go("login.index1", {});
      }

      $rootScope.comeHome = function () {
        $state.go('main.home');
      }

      function delete_cookie(cookie_name) {
        document.cookie = cookie_name + "=; expires=Thu, 01-Jan-70 00:00:01 GMT; path=/; domain=.tix.vn;";
      }

      // Meta Service
      $rootScope.metaTitle = 'TIX - Đặt Vé Nhanh Nhất / ';
      $rootScope.metaUrl = 'https://tix.vn/';
      $rootScope.metaDescriptionShort = "Đặt Vé Nhanh Nhất.";
      ngMeta.init();
      ngMeta.setDefaultTag('title', $rootScope.metaTitle);
      ngMeta.setDefaultTag('url', $rootScope.metaUrl);
      ngMeta.setDefaultTag('descriptionShort', $rootScope.metaDescriptionShort);

      // if (!$rootScope.isMobile) {
      //   fallingSnow();
      // //   floatingCloud();
      //   window.addEventListener('resize', function() {
      //     var canvas = document.getElementById("canvas");
      //     canvas.width = window.innerWidth;
      //     canvas.height = window.innerHeight;
      //   });
      // }
    });
}());